/*
 * Casino.cpp
 *
 *  Created on: Jun 5, 2017
 *      Author: LyBo-Pc
 */

#include "Casino.h"

Casino::Casino() {
	// TODO Auto-generated constructor stub

}

void Casino::addHall(Hall hall) {
	casino.push_back(hall);
}

double Casino::casinoProfit() {
	double result;
	for(int i =0;i<casino.size();i++){
		result+=casino[i].hallProfit();
	}
}

pair<string, int> Casino::lessPlayedGame() {
	map<string,int> res = nameToCounter();

	if(res.empty())
	{
		return make_pair("",0)
	}
	string bestName = res.begin()->first;
	int bestCounter = res.begin()->second;
	for(int i =0;i<casino.size();i++){
		map<string,int> perHall = casino[i].nameToCounter();
		for(map<string,int>::iterator it = perHall.begin();it!=perHall.end(),it++)
		{

		}
	}
}

map<string, int> Casino::mostPlayedGame() {
}

map<string, int> Casino::mostProfitableGame() {
}

void Casino::searchByName() {
}

vector<Game> Casino::threeMostPlayedGames() {
}

vector<Game> Casino::fiveMostProfitGames() {
}

map<string, int> Casino::nameToCounter() {
	 map<string,int> res;
	 for(int i=0;i<casino.size();i++)
	 {
		 map<string,int> perHall = casino[i].nameToCounter();
		 for(map<string,int>::iterator it=perHall.begin();it!=perHall.end();++it)
		 {
			 if(perHall.find(it->first) == perHall.end()){
				 res.insert(map<string,int>::value_type(it->first,it->second));
			 }
			 else
			 {
				 res[it->first] = it->second;
			 }

		 }
	 }
	 return res;
}

Casino::~Casino() {
	// TODO Auto-generated destructor stub
}

